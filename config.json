{
  "prompts": {
    "issue_detection": "Analyze this GitHub Issue:\n\nREADME: {readme_content}\n\nPinned Issues: {pinned_issues_content}\n\nTitle: {issue_title}\nBody: {issue_body}\nTemplate: {template_analysis}\n\nIs this issue:\n1. Already covered in README or pinned issues?\n2. Spam/meaningless content?\n3. Too vague/lacks details?\n4. Too basic/elementary - Even if the description is detailed and complete, if the core question is about basic usage, installation, or concepts that can be easily found through documentation or search engines, it should be considered basic.\n\nRespond ONLY with:\n- `README_COVERED` - if already covered in README or pinned issues\n- `SPAM` - if spam or meaningless content\n- `UNCLEAR` - if too vague, needs more details  \n- `BASIC` - if too basic/elementary for the project level (regardless of description quality)\n- `KEEP` - if clear and valid",
    
    "issue_classification": "Classify this GitHub Issue:\n\nTitle: {issue_title}\nContent: {user_content}\n\nWhich label fits best: {labels_options}\n\nRespond with ONLY the label name (e.g., BUG, ENHANCEMENT).",
    
    "pr_detection": "Analyze this GitHub PR for spam:\n\nTitle: {pr_title}\nBody: {pr_body}\nChanges: {file_changes}\n\nSpam indicators: meaningless content, malicious code, random chars, ads, unrelated, test-only.\n\nRespond ONLY with:\n- `CLOSE` - if spam\n- `KEEP` - if legitimate (even if low quality)",
    
    "readme_relevance": "Analyze if this GitHub Issue is related to content in the README:\n\nREADME Content: {readme_content}\n\nIssue Title: {issue_title}\nIssue Body: {issue_body}\n\nIs this issue asking about something that is already explained or covered in the README?\n\nRespond ONLY with:\n- `RELATED` - if the issue is asking about content covered in README\n- `NOT_RELATED` - if the issue is not about README content",
    
    "readme_answer": "Based on the README content, provide a brief and direct answer to this GitHub Issue:\n\nREADME Content: {readme_content}\n\nIssue Title: {issue_title}\nIssue Body: {issue_body}\n\nProvide a concise answer in Chinese. Focus on the key information and avoid lengthy explanations. If applicable, mention the relevant section in README."
  },
  
  "responses": {
    "issue_spam": "🤖 此Issue已被检测为垃圾信息，将被关闭并锁定。如果您认为这是误判，请联系仓库维护者。",
    "issue_readme_covered": "🤖 根据上述回答，此问题已得到解决，Issue将被关闭。如有其他疑问，请在此Issue中继续讨论。",
    "issue_basic": "🤖 此Issue涉及的是基础使用问题，请善用 Google 等任何搜索引擎。",
    "issue_unclear": "🤖 您的Issue描述过于简单，缺乏足够的信息。为了更好地帮助您，请补充以下信息：\n\n📝 **请详细描述问题：**\n- 您遇到的具体问题是什么？\n- 预期的行为是什么？\n- 实际发生的行为是什么？\n\n🔧 **环境信息：**\n- 操作系统版本\n- 相关软件版本\n- 浏览器版本（如适用）\n\n📋 **重现步骤：**\n- 第一步\n- 第二步\n\n📎 **其他信息：**\n- 错误信息截图\n- 相关日志\n\n请编辑您的Issue并添加上述信息，这样我们就能更好地理解和解决您的问题了！",
    "readme_answer_prefix": "🤖 根据项目README的内容，我来为您解答这个问题：\n\n",
    "pr_closed": "🤖 此Pull Request已被检测为垃圾信息，将被关闭。如果您认为这是误判，请联系仓库维护者。"
  },
  
  "logging": {
    "issue_check_start": "检查Issue: {title}",
    "pr_check_start": "检查PR: {title}",
    "target_repo": "目标仓库: {owner}/{repo}",
    "readme_found": "成功获取README.md文件",
    "readme_not_found": "未找到README.md文件，将跳过重复内容检查",
    "pinned_issues_found": "成功获取置顶Issues内容",
    "pinned_issues_not_found": "未找到置顶Issues，将跳过置顶Issues检查",
    "issue_closed_log": "Issue #{number} 已被关闭并锁定",
    "issue_spam_log": "Issue #{number} 被检测为垃圾信息，已关闭并锁定",
    "issue_readme_covered_log": "Issue #{number} 内容已在README中覆盖，已关闭但未锁定",
    "issue_unclear_log": "Issue #{number} 被标记为描述不清，已添加补充信息提示",
    "issue_basic_log": "Issue #{number} 被检测为基础问题，已关闭并锁定",
    "issue_passed_log": "Issue #{number} 通过检查，保持开启状态",
    "readme_relevance_check": "检查Issue #{number} 与README的相关性",
    "readme_answer_generated": "为Issue #{number} 生成基于README的回答",
    "readme_answer_failed": "为Issue #{number} 生成README回答失败: {error}",
    "pr_closed_log": "PR #{number} 已被关闭并锁定",
    "pr_passed_log": "PR #{number} 通过检查，保持开启状态",
    "classification_start": "开始对Issue进行分类: #{number}",
    "label_added": "已为Issue #{number} 添加标签: {label}",
    "label_no_match": "Issue #{number} 分类结果不匹配任何预设标签: {classification}",
    "file_changes_count": "获取到{count}个文件的变更信息",
    "file_changes_truncated": "(共{total}个文件，仅显示前{shown}个)",
    "no_file_changes": "(无文件变更)",
    "file_changes_error": "获取PR文件变更失败: {error}",
    "file_changes_unavailable": "(无法获取文件变更信息)",
    "file_analysis_disabled": "(文件变更分析已禁用)",
    "file_analysis_disabled_info": "文件变更分析已禁用，仅分析标题和描述",
    "ai_call_start": "准备进行{purpose}，使用模型: {model}",
    "ai_call_result": "{purpose}结果: {result}",
    "ai_call_failed": "{purpose}失败: {error}",
    "ai_status_code": "状态码: {code}",
    "ai_response_body": "响应体: {body}",
    "using_ai_model": "使用AI模型: {model}",
    "using_custom_api": "使用自定义API端点",
    "using_github_models": "使用GitHub Models API",
    "config_info": "配置信息:",
    "analysis_depth_info": "- 分析文件变更: {analyze_changes}",
    "analysis_depth_details": "- 分析深度: {depth} (文件数:{files}, 行数:{lines})",
    "event_no_match": "事件类型不匹配，跳过处理",
    "issue_process_error": "处理Issue时出错: {error}",
    "pr_process_error": "处理PR时出错: {error}",
    "available_labels": "可用标签: {labels}",
    "template_detected": "检测到Issue模板: {type} (置信度: {confidence}%)",
    "template_analysis": "模板分析: {sections}个有效内容段落",
    "user_content_extracted": "已提取用户填写内容: {length}字符",
    "quality_analysis": "内容质量: {level} (评分: {score})",
    "label_add_failed": "添加标签失败: {error}",
    "classification_failed": "AI分类调用失败，跳过分类: {error}",
    "classification_process_error": "Issue分类过程出错: {error}",
    "readme_fetch_failed": "获取README文件失败",
    "pinned_issues_fetch_failed": "获取置顶Issues失败",
    "issue_comment_failed": "添加Issue评论失败",
    "issue_unclear_comment_failed": "添加Issue描述不清提示评论失败",
    "issue_close_failed": "关闭Issue失败",
    "issue_lock_failed": "锁定Issue失败",
    "label_add_api_failed": "添加标签API调用失败",
    "pr_comment_failed": "添加PR评论失败",
    "pr_close_failed": "关闭PR失败",
    "pr_lock_failed": "锁定PR失败",
    "pr_files_fetch_failed": "获取PR文件列表失败"
  },
  
  "ai_settings": {
    "analyze_file_changes": true,
    "max_files_to_analyze": 5,
    "max_patch_lines_per_file": 5,
    "max_tokens": 50,
    "temperature": 0.05
  },
  
  "defaults": {
    "ai_model": "openai/gpt-4o",
    "labels": "bug,enhancement,question",
    "analysis_depth": "normal",
    "api_base_url": "https://models.github.ai/inference",
    "lock_reason": "spam"
  },
  
  "analysis_depths": {
    "light": {
      "max_files": 3,
      "max_lines": 3
    },
    "normal": {
      "max_files": 5,
      "max_lines": 5
    },
    "deep": {
      "max_files": 10,
      "max_lines": 10
    }
  }
}